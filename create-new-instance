#! /bin/zsh

# Verify that there are conditions to run
if [[ -f playbook.db.sql.gz && -f playbook.files.tar.gz ]]; then
  echo "Database and site files found."
else
  echo "Either the database or the site files are missing."
  exit 1
fi

# Clone the repository (not using create-project because DDEV is not available at this point yet)
echo "Cloning the participation playbook repository into ./playbook"
git clone git@github.com:noelrivasc/participation-playbook.git playbook

branch_arg="$1"
test_branch="drupal-10"

if [[ "$branch_arg" ]]; then
    test_branch="$branch_arg"
    echo "Test branch will be $test_branch"
fi

skip_db_import_arg="$2"


cd playbook
git checkout "$test_branch"

# Replace the site name with a random string in .ddev/config.yml
instance_id=`xxd -l 8 -c 8 -p < /dev/random`
echo $instance_id > instance-id

echo "Replacing the site name in .ddev/config.yaml with pretty gibberish: ({$instance_id})."
if [[ "$OSTYPE" == "darwin"* ]]; then
  sed -i '' "s/playbook/playbook-${instance_id}/g" .ddev/config.yaml
else
  sed -i "s/playbook/playbook-${instance_id}/g" .ddev/config.yaml
fi

ddev start
ddev auth ssh
ddev composer install --prefer-dist

echo "Uncompressing site files from playbook.file.tar.gz to web/sites/default/"
tar -zxvf ../playbook.files.tar.gz -C web/sites/default >/dev/null 2>&1

if [[ "$skip_db_import_arg" ]]; then
    echo "We will skip importing the default database."
else
    echo "Importing database from playbook.db.sql.gz"
    ddev import-db -f ../playbook.db.sql.gz
    ddev launch
    ddev drush uli | pbcopy
fi

echo "The login URL for admin was copied to the clipboard."

../set-config-directory
